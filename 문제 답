문제 1번 
function solution(s) {
    let a=[];
    let answer = [];
    for(let i=0;i<s.length;i++){
        if(s[i]!=s[i+1]&&s[i]!=s[i-1])
            a.push({"key":i,"value":s[i]})
    }
    if(a.length===0){
        answer.push("","")
        return answer;
    }
    let word = s[0]
    if(a[0].key != 0)
        answer.push("")
    for(let j=1;j<a.length;j++){
        if(a[j].key-1===a[j-1].key)
            word+=a[j].value
        else{
            answer.push(word)
            word=a[j].value
        }
    }
    answer.push(word)
    if(a[a.length-1].key != s.length-1)
        answer.push("")
    return answer;
}



문제2번
function solution(text) {
    let index = [];
    let answer = [];
    let count =0;
    
    index.push({"num":0,"pattern":"A"},{"num":1,"pattern":"B"})
    while(text.length>0){
        let len = 0;
        for(let i in index){
            const pattern = index[i].pattern
            if(text.substr(0,pattern.length)===pattern){
                answer[count]=index[i].num
                len = pattern.length
            }
        }
        index.push({"num":index.length,"pattern":text.substr(0,len+1)})
        index=index.filter((arr, index, callback) => index === callback.findIndex(t => t.pattern === arr.pattern));
        text = text.substr(len)
        count++
    }
    console.log(index)
    return answer;
}



문제3번
function solution(n, goal) {
    let answer = 0;
    for(let i in goal){
        for(let j=0;j<i;j++)
            if(goal[i]<goal[j])
                answer++
    }
    return answer;
}
문제4번
function solution(world) {
    const N=world[0].length;
    const M=world.length;
    let a=[1,1];
    let b=[1,2];
    let type = 0;
    while(JSON.stringify(a) === JSON.stringify([N,M])||
          JSON.stringify(b) === JSON.stringify([N,M])){
        switch(type){
            case 0:     // |인경우
                
            break;
            case 1:     // /인경우
                
            break;
            case 2:     // ㅡ인경우
                
            break;
            case 3:     // \인경우
                
            break;
            default:
                break;
        }
    }
    var answer = 0;
    return answer;
}
